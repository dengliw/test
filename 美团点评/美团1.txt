/*贪心的小博
时间限制：C/C++语言 2000MS；其他语言 4000MS
内存限制：C/C++语言 65536KB；其他语言 589824KB
题目描述：
小博沉迷收集卡片，购买干脆面是他收集卡片的主要方式。他总共渴望的有N类卡片，均可通过购买干脆面获得，一包干脆面中有且仅有一张卡片，并且卡片类型对应N类卡片中的一种。且每种类型的卡片出现在一包干脆面中的概率是相等的。小博非常的贪心，他有N个愿望，第i个愿望即为：拥有至少pi张i类卡片，其中1 ≤ i ≤ N。然而，小博又极其贫困，他想知道最少需要买多少干脆面，使得在最坏情况下，至少能够满足他N个愿望的其中一个。  
输入
第一行包含一个整数N， 1 ≤ N ≤ 105。
第二行包含N个整数pi，pi表示小博希望至少拥有的i类卡片数量。1 ≤pi≤ 105 。
输出
输出一个整数ANS，小博可以完成至少一个愿望需要购买的最少的干脆面的数量。

样例输入
3
8 6 9
样例输出
21

Hint
Input Sample 2
2
3 5
Output Sample 2
7
温馨提示
请尽量在全场考试结束10分钟前调试程序，否则由于密集排队提交，可能查询不到编译结果 
点击“调试”亦可保存代码
编程题可以使用本地编译器，此页面不记录跳出次数*/

import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Main {



    static int solve(int[] a) {
	
        int i = 0;
  
        int sum = 0;
    
        for( i = 0 ; i < a.length; i++){
        	
            sum = sum + a[i];
        }
     
        sum -= a.length ;
        sum++;
		return sum;
    }

    public static void main(String[] args){
        Scanner in = new Scanner(System.in);
        int res;
/**************输入****************/            
        int _a_size = 0;
        _a_size = Integer.parseInt(in.nextLine().trim());
        int[] _a = new int[_a_size];
        int _a_item;
        for(int _a_i = 0; _a_i < _a_size; _a_i++) {
            _a_item = Integer.parseInt(in.nextLine().trim());
            _a[_a_i] = _a_item;
        }
/**************输入****************/     
        res = solve(_a);
        System.out.println(res);

    }
}
